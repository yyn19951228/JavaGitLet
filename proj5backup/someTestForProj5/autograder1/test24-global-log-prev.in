# Check that global-log prints out commits that are no longer in any branch.
# Set up one commit with two files.
# Initialize and add two files.
# Standard commands and definitions
> init
<<<
# A status log header RE.  Captures the commit id in its sole group.
D DATE "\d\d\d\d-\d\d-\d\d\s+\d\d:\d\d:\d\d"
D COMMIT_HEAD "Commit ([a-f0-9]+)[ \t]*\n${DATE}"
# A full log entry.  Captures the entry. Assume logs messages don't contain
# ===
D COMMIT_LOG "(===[ ]*\nCommit [a-f0-9]+[ ]*\n${DATE}[ ]*\n(?:.|\n)*?(?=\Z|\n===))"
# An arbitrary line of text (works even with ?s)
D ARBLINE "[^\n]*(?=\n|\Z)"
# Zero or more arbitrary full lines of text.
D ARBLINES "(?:(?:.|\n)*(?:\n|\Z)|\A|\Z)"
+ f.txt wug.txt
+ g.txt notwug.txt
> add g.txt
<<<
> add f.txt
<<<
> commit "Two files"
<<<
+ h.txt wug.txt
> add h.txt
<<<
> commit "Add h"
<<<
> log
${COMMIT_LOG}
${COMMIT_LOG}
${COMMIT_LOG}
<<<*
D L1 "${1}"
D L2 "${2}"
D L3 "${3}"
> log
===
${COMMIT_HEAD}
Add h

===
${COMMIT_HEAD}${ARBLINES}
<<<*
D ID "${2}"
> reset ${ID}
<<<
> global-log
${ARBLINES}${L1}?${ARBLINES}
<<<*
