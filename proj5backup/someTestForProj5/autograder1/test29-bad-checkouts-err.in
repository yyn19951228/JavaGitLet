# Check that we can check out a previous version.
# Standard commands and definitions
> init
<<<
# A status log header RE.  Captures the commit id in its sole group.
D DATE "\d\d\d\d-\d\d-\d\d\s+\d\d:\d\d:\d\d"
D COMMIT_HEAD "Commit ([a-f0-9]+)[ \t]*\n${DATE}"
# A full log entry.  Captures the entry. Assume logs messages don't contain
# ===
D COMMIT_LOG "(===[ ]*\nCommit [a-f0-9]+[ ]*\n${DATE}[ ]*\n(?:.|\n)*?(?=\Z|\n===))"
# An arbitrary line of text (works even with ?s)
D ARBLINE "[^\n]*(?=\n|\Z)"
# Zero or more arbitrary full lines of text.
D ARBLINES "(?:(?:.|\n)*(?:\n|\Z)|\A|\Z)"
+ wug.txt wug.txt
> add wug.txt
<<<
> commit "version 1 of wug.txt"
<<<
+ wug.txt notwug.txt
> add wug.txt
<<<
> commit "version 2 of wug.txt"
<<<
> log
===
${COMMIT_HEAD}
version 2 of wug.txt
 
===
${COMMIT_HEAD}
version 1 of wug.txt
 
===
${COMMIT_HEAD}
initial commit
 
<<<*
# UID of second version
D UID2 "${1}"
# UID of current version
D UID1 "${2}"
> checkout ${UID2} -- warg.txt
File does not exist in that commit.
<<<
> checkout 5d0bc169a1737e955f9cb26b9e7aa21e4afd4d12 -- wug.txt
No commit with that id exists.
<<<
> checkout ${UID2} ++ wug.txt
Incorrect operands.
<<<
> checkout foobar
No such branch exists.
<<<